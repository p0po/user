<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.yongpo.mapper.PassportMapper" >
  <resultMap id="BaseResultMap" type="net.yongpo.model.Passport" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="SALT" property="salt" jdbcType="VARCHAR" />
    <result column="LAST_LOGIN_TIME" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="LAST_LOGIN_IP" property="lastLoginIp" jdbcType="VARCHAR" />
    <result column="LAST_LOGIN_UA" property="lastLoginUa" jdbcType="VARCHAR" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="PASSWORD_SET_TIME" property="passwordSetTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Condition_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Condition_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, USER_ID, PASSWORD, SALT, LAST_LOGIN_TIME, LAST_LOGIN_IP, LAST_LOGIN_UA, UPDATE_TIME, 
    PASSWORD_SET_TIME
  </sql>
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="net.yongpo.model.PassportCondition" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from passport
    <if test="index" >
       FORCE INDEX(`${index}`) 
    </if>
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitOffset >= 0" >
       limit ${limitOffset} , ${limitSize}
    </if>
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from passport
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from passport
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByCondition" parameterType="net.yongpo.model.PassportCondition" >
    delete from passport
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.yongpo.model.Passport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into passport (USER_ID, PASSWORD, SALT, 
      LAST_LOGIN_TIME, LAST_LOGIN_IP, LAST_LOGIN_UA, 
      UPDATE_TIME, PASSWORD_SET_TIME)
    values (#{userId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=VARCHAR}, #{lastLoginUa,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{passwordSetTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="net.yongpo.model.Passport" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into passport
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="salt != null" >
        SALT,
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME,
      </if>
      <if test="lastLoginIp != null" >
        LAST_LOGIN_IP,
      </if>
      <if test="lastLoginUa != null" >
        LAST_LOGIN_UA,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="passwordSetTime != null" >
        PASSWORD_SET_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null" >
        #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginUa != null" >
        #{lastLoginUa,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordSetTime != null" >
        #{passwordSetTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByCondition" parameterType="net.yongpo.model.PassportCondition" resultType="java.lang.Integer" >
    select count(*) from passport
    <if test="_parameter != null" >
      <include refid="Condition_Where_Clause" />
    </if>
  </select>
  <update id="updateByConditionSelective" parameterType="map" >
    update passport
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.password != null" >
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.salt != null" >
        SALT = #{record.salt,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginTime != null" >
        LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastLoginIp != null" >
        LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="record.lastLoginUa != null" >
        LAST_LOGIN_UA = #{record.lastLoginUa,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passwordSetTime != null" >
        PASSWORD_SET_TIME = #{record.passwordSetTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByCondition" parameterType="map" >
    update passport
    set ID = #{record.id,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      PASSWORD = #{record.password,jdbcType=VARCHAR},
      SALT = #{record.salt,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{record.lastLoginTime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{record.lastLoginIp,jdbcType=VARCHAR},
      LAST_LOGIN_UA = #{record.lastLoginUa,jdbcType=VARCHAR},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      PASSWORD_SET_TIME = #{record.passwordSetTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Condition_Where_Clause" />
    </if>
  </update>
  <update id="updateByIdSelective" parameterType="net.yongpo.model.Passport" >
    update passport
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salt != null" >
        SALT = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginTime != null" >
        LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null" >
        LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      </if>
      <if test="lastLoginUa != null" >
        LAST_LOGIN_UA = #{lastLoginUa,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="passwordSetTime != null" >
        PASSWORD_SET_TIME = #{passwordSetTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="net.yongpo.model.Passport" >
    update passport
    set USER_ID = #{userId,jdbcType=INTEGER},
      PASSWORD = #{password,jdbcType=VARCHAR},
      SALT = #{salt,jdbcType=VARCHAR},
      LAST_LOGIN_TIME = #{lastLoginTime,jdbcType=TIMESTAMP},
      LAST_LOGIN_IP = #{lastLoginIp,jdbcType=VARCHAR},
      LAST_LOGIN_UA = #{lastLoginUa,jdbcType=VARCHAR},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      PASSWORD_SET_TIME = #{passwordSetTime,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>